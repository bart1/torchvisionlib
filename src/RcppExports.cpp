// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "torchvisionlib_types.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// vision_ops_nms
torch::index::Tensor vision_ops_nms(torch::Tensor dets, torch::Tensor scores, double iou_threshold);
RcppExport SEXP _torchvisionlib_vision_ops_nms(SEXP detsSEXP, SEXP scoresSEXP, SEXP iou_thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< torch::Tensor >::type dets(detsSEXP);
    Rcpp::traits::input_parameter< torch::Tensor >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< double >::type iou_threshold(iou_thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(vision_ops_nms(dets, scores, iou_threshold));
    return rcpp_result_gen;
END_RCPP
}
// test_f
int test_f(torch::string path);
RcppExport SEXP _torchvisionlib_test_f(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< torch::string >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(test_f(path));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_torchvisionlib_vision_ops_nms", (DL_FUNC) &_torchvisionlib_vision_ops_nms, 3},
    {"_torchvisionlib_test_f", (DL_FUNC) &_torchvisionlib_test_f, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_torchvisionlib(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
